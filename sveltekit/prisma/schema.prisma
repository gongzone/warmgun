// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views", "clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role       Role      @default(USER)
  profile    Profile?
  drafts     Draft[]
  articles   Article[]
  comments   Comment[]
  likes      Like[]
  followedBy User[]    @relation("UserFollows")
  following  User[]    @relation("UserFollows")
}

enum Role {
  USER
  ADMIN
}

model Profile {
  id       Int     @id @default(autoincrement())
  nickname String
  bio      String
  avatar   String?

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

view UserAuth {
  id       Int     @unique
  username String
  nickname String
  avatar   String?
  role     Role
}

model Draft {
  id        Int      @id @default(autoincrement())
  title     String   @default("")
  subTitle  String   @default("")
  body      String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User @relation(fields: [authorId], references: [id])
  authorId Int  @unique
}

model Article {
  id            Int      @id @default(autoincrement())
  title         String
  subTitle      String
  body          String
  coverImage    String?
  slug          String   @unique
  trendingScore Float    @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  author   User      @relation(fields: [authorId], references: [id])
  authorId Int
  likes    Like[]
  comments Comment[]
  tags     Tag[]
}

model Comment {
  id   Int    @id @default(autoincrement())
  text String

  children  Comment[] @relation("comment_children")
  parent    Comment?  @relation("comment_children", fields: [parentId], references: [id])
  parentId  Int?
  replier   User      @relation(fields: [replierId], references: [id])
  replierId Int
  article   Article   @relation(fields: [articleId], references: [id])
  articleId Int
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  articles Article[]
}

model Like {
  id Int @id @default(autoincrement())

  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int
}
